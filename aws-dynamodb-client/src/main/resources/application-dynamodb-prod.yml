# DynamoDB 프로덕션 환경 설정
# 최고 성능과 안정성을 위한 프로덕션 최적화 설정

aws:
  dynamodb:
    # 프로덕션 환경용 설정
    table-prefix: ""
    table-suffix: ""
    enable-point-in-time-recovery: true
    tags:
      Environment: "production"
      Application: "awskit"
      ManagedBy: "spring-boot"
      Backup: "enabled"
      Monitoring: "enabled"
    
    # 클라이언트 설정 (프로덕션 최적화)
    client-config:
      enable-metrics: true
      enable-client-side-monitoring: true
      enable-request-compression: true
      request-compression-threshold-bytes: 8192
      enable-client-caching: true
      cache-key-ttl: PT10M
      enable-request-logging: false
      enable-response-logging: false
    
    # 연결 설정 (고성능)
    connection-config:
      max-connections: 100
      connection-timeout: PT10S
      socket-timeout: PT60S
      connection-acquisition-timeout: PT15S
      connection-time-to-live: PT10M
      connection-max-idle-time: PT2M
      tcp-keep-alive: true
      keep-alive-timeout: PT60S
      enable-http2: true
      max-concurrent-streams: 200
    
    # 재시도 설정 (프로덕션용 안정성)
    retry-config:
      max-retries: 5
      base-delay: PT0.1S
      max-backoff-time: PT60S
      backoff-strategy: "FULL_JITTER"
      enable-adaptive-retry: true
      enable-throttle-retry: true
      throttle-retry-delay: PT1S
      enable-circuit-breaker: true
      circuit-breaker-failure-threshold: 10
      circuit-breaker-recovery-timeout: PT2M
    
    # 테이블 설정
    table-config:
      billing-mode: "PAY_PER_REQUEST"
      enable-deletion-protection: true
      enable-streams: false
    
    # 쿼리 설정 (최적화)
    query-config:
      default-page-size: 500
      scan-timeout: PT10M
      query-timeout: PT60S
      consistent-read: false
      enable-parallel-scan: true
      total-segments: 4
    
    # 배치 설정 (최적화)
    batch-config:
      batch-write-size: 25
      batch-read-size: 100
      batch-flush-interval: PT0.5S
      enable-batching: true
      max-retry-attempts: 5
      retry-delay: PT0.2S
    
    # 용량 관리 설정 (자동 스케일링 활성화)
    capacity-config:
      enable-auto-scaling: true
      read-min-capacity: 10
      read-max-capacity: 10000
      read-target-utilization: 70
      read-scale-up-cooldown: PT1M
      read-scale-down-cooldown: PT10M
      write-min-capacity: 10
      write-max-capacity: 10000
      write-target-utilization: 70
      write-scale-up-cooldown: PT1M
      write-scale-down-cooldown: PT10M
      enable-rate-limiting: true
      read-requests-per-second: 1000
      write-requests-per-second: 1000
      bulk-operation-batch-size: 25
      bulk-operation-delay: PT0.05S
    
    # 지역 설정
    region-config:
      region: "${AWS_REGION:us-east-1}"
      enable-cross-region-replication: false
      enable-global-tables: false
      use-fips-endpoint: true
      use-dual-stack-endpoint: true
    
    # 모니터링 설정 (전체 활성화)
    monitoring-config:
      enable-cloud-watch-metrics: true
      cloud-watch-namespace: "DynamoDB/Production"
      metrics-publish-interval: PT30S
      enable-x-ray-tracing: true
      x-ray-tracing-name: "DynamoDB-Production"
      x-ray-sampling-rate: 0.05
      enable-health-check: true
      health-check-interval: PT30S
      health-check-timeout: PT3S
      enable-performance-monitoring: true
      slow-query-threshold: PT2S
      log-slow-queries: true
      enable-alerts: true
      error-rate-threshold: 1
      alert-cooldown: PT10M
      metric-tags:
        Service: "dynamodb-client"
        Version: "1.0.0"
        Stage: "production"
        Team: "platform"

# 프로덕션 로깅 설정
logging:
  level:
    com.ryuqq.aws.dynamodb: INFO
    software.amazon.awssdk.services.dynamodb: WARN
    software.amazon.awssdk.request: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"