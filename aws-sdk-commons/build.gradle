plugins {
    id 'org.springframework.boot'
    id 'jacoco'
}

// This is a library module, disable bootJar and enable plain jar
jar {
    enabled = true
    archiveClassifier = ''
}

bootJar {
    enabled = false
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/*Properties*',
                '**/*AutoConfiguration*'
            ])
        }))
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = false
    }

    systemProperty 'junit.jupiter.execution.parallel.enabled', 'true'
    systemProperty 'junit.jupiter.execution.parallel.mode.default', 'concurrent'
    maxParallelForks = Runtime.runtime.availableProcessors()
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
        }
        rule {
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
        }
    }
}

dependencies {
    // Spring Boot - provided by user
    compileOnly 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.springframework.boot:spring-boot-autoconfigure'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // AWS SDK core types that are part of public API
    api 'software.amazon.awssdk:aws-core'
    api 'software.amazon.awssdk:auth'
    api 'software.amazon.awssdk:regions'
    
    // Internal dependencies - not exposed
    implementation 'software.amazon.awssdk:apache-client'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}