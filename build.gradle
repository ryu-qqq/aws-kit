plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'io.spring.dependency-management' version '1.1.6' apply false
}

allprojects {
    // JitPack requires com.github.username format
    group = System.getenv("JITPACK") ? "com.github.ryu-qqq" : project.group
    version = project.version
    
    apply plugin: 'maven-publish'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }
    
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "software.amazon.awssdk:bom:${awsSdkVersion}"
            mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        }
    }
    
    dependencies {
        // Common dependencies for all modules
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        // Testing dependencies
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.mockito:mockito-core'
        testImplementation 'org.mockito:mockito-junit-jupiter'
        testImplementation 'org.assertj:assertj-core'
    }
    
    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs += [
            '-parameters',
            '-Xlint:all',
            '-Xlint:-processing'
        ]
    }
    
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
    
    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                
                artifactId = project.name
                
                pom {
                    name = project.name
                    description = 'AWS SDK Abstraction Library - ' + project.name
                    url = 'https://github.com/ryu-qqq/aws-kit'
                    
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    
                    developers {
                        developer {
                            id = 'ryu-qqq'
                            name = 'Sangwon Ryu'
                            email = 'your-email@example.com'
                        }
                    }
                    
                    scm {
                        connection = 'scm:git:git://github.com/ryu-qqq/aws-kit.git'
                        developerConnection = 'scm:git:ssh://github.com/ryu-qqq/aws-kit.git'
                        url = 'https://github.com/ryu-qqq/aws-kit'
                    }
                }
            }
        }
    }
}

// Root project publishing configuration for JitPack
publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = 'aws-kit'
            version = project.version
            
            // Create a BOM (Bill of Materials) that includes all subprojects
            pom {
                packaging = 'pom'
                name = 'AWS Kit'
                description = 'AWS SDK Abstraction Library for Spring Boot'
                url = 'https://github.com/ryu-qqq/aws-kit'
                
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                
                developers {
                    developer {
                        id = 'ryu-qqq'
                        name = 'Sangwon Ryu'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/ryu-qqq/aws-kit.git'
                    developerConnection = 'scm:git:ssh://github.com/ryu-qqq/aws-kit.git'
                    url = 'https://github.com/ryu-qqq/aws-kit'
                }
                
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencyManagement').appendNode('dependencies')
                    
                    // Add all subprojects as managed dependencies
                    subprojects.each { subproject ->
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', subproject.group)
                        dependencyNode.appendNode('artifactId', subproject.name)
                        dependencyNode.appendNode('version', subproject.version)
                    }
                }
            }
        }
    }
}