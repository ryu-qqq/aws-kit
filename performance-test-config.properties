# AWS Kit Performance Testing Configuration
# This file contains configuration for performance tests across all AWS Kit modules

# =============================================================================
# Test Execution Parameters
# =============================================================================

# Concurrent execution settings
performance.threads.max=100
performance.threads.sns=50
performance.threads.secrets=50
performance.operations.per.thread=100

# Test duration and warmup
performance.warmup.duration.seconds=30
performance.test.duration.seconds=60
performance.iterations=5

# =============================================================================
# Performance Thresholds
# =============================================================================

# SNS Performance Thresholds
sns.latency.average.max.ms=100
sns.latency.p95.max.ms=500
sns.throughput.min.ops.per.sec=1000
sns.memory.increase.max.mb=100
sns.success.rate.min=0.95
sns.batch.size.optimal=10

# Cache Performance Thresholds
cache.hit.latency.max.ms=10
cache.miss.latency.max.ms=500
cache.hit.ratio.min=0.75
cache.throughput.min.ops.per.sec=2000
cache.memory.increase.max.mb=200
cache.eviction.latency.max.ms=1000

# Memory and Resource Thresholds
memory.heap.max.usage.percent=0.85
memory.leak.growth.max.percent=0.5
gc.overhead.max.percent=0.1

# =============================================================================
# Test Data Configuration
# =============================================================================

# SNS Test Data
sns.test.topic.arn=arn:aws:sns:us-east-1:123456789012:performance-test-topic
sns.message.size.small=256
sns.message.size.medium=2048
sns.message.size.large=64000
sns.batch.size.min=1
sns.batch.size.max=50

# Secrets Test Data
secrets.cache.size=1000
secrets.unique.secrets=200
secrets.hot.keys.ratio=0.2
secrets.test.secret.prefix=perf-test-secret
secrets.json.complexity.simple=5
secrets.json.complexity.complex=50

# =============================================================================
# Monitoring and Metrics
# =============================================================================

# JMH Configuration
jmh.warmup.iterations=3
jmh.measurement.iterations=5
jmh.threads=4
jmh.fork.count=1
jmh.heap.size=4g

# Metrics Collection
metrics.collection.interval.ms=1000
metrics.memory.sampling.interval.ms=500
metrics.gc.monitoring.enabled=true

# Output Configuration
results.output.directory=./performance-results
results.format=JSON,CSV,HTML
results.timestamp.format=yyyy-MM-dd-HH-mm-ss

# =============================================================================
# AWS Service Mock Configuration
# =============================================================================

# SNS Mock Settings
mock.sns.response.delay.min.ms=10
mock.sns.response.delay.max.ms=100
mock.sns.error.rate=0.05
mock.sns.timeout.rate=0.01

# Secrets Manager Mock Settings
mock.secrets.response.delay.min.ms=20
mock.secrets.response.delay.max.ms=200
mock.secrets.cache.hit.rate=0.8
mock.secrets.error.rate=0.02

# =============================================================================
# Load Testing Scenarios
# =============================================================================

# Scenario 1: Baseline Performance
scenario.baseline.name=Baseline Performance Test
scenario.baseline.threads=10
scenario.baseline.duration.seconds=60
scenario.baseline.operations.per.thread=100

# Scenario 2: High Concurrency
scenario.high.concurrency.name=High Concurrency Test
scenario.high.concurrency.threads=100
scenario.high.concurrency.duration.seconds=120
scenario.high.concurrency.operations.per.thread=50

# Scenario 3: Memory Pressure
scenario.memory.pressure.name=Memory Pressure Test
scenario.memory.pressure.heap.pressure.mb=1024
scenario.memory.pressure.threads=50
scenario.memory.pressure.duration.seconds=180

# Scenario 4: Error Recovery
scenario.error.recovery.name=Error Recovery Test
scenario.error.recovery.error.rate=0.3
scenario.error.recovery.timeout.rate=0.1
scenario.error.recovery.threads=25
scenario.error.recovery.duration.seconds=90

# Scenario 5: Cache Performance
scenario.cache.performance.name=Cache Performance Test
scenario.cache.performance.cache.size=2000
scenario.cache.performance.hot.ratio=0.1
scenario.cache.performance.threads=75
scenario.cache.performance.duration.seconds=150

# =============================================================================
# Environment-Specific Overrides
# =============================================================================

# Development Environment
env.dev.performance.threads.max=20
env.dev.test.duration.seconds=30
env.dev.operations.per.thread=50

# CI Environment
env.ci.performance.threads.max=10
env.ci.test.duration.seconds=60
env.ci.heap.size=2g
env.ci.timeout.multiplier=2

# Production Load Test Environment
env.prod.performance.threads.max=200
env.prod.test.duration.seconds=300
env.prod.operations.per.thread=500
env.prod.heap.size=8g

# =============================================================================
# Alerting and Reporting Thresholds
# =============================================================================

# Performance Regression Detection
regression.latency.increase.max.percent=0.20
regression.throughput.decrease.max.percent=0.15
regression.memory.increase.max.percent=0.30
regression.error.rate.increase.max.percent=0.05

# Alert Thresholds (for CI/CD pipeline integration)
alert.critical.latency.increase.percent=0.50
alert.critical.throughput.decrease.percent=0.30
alert.critical.memory.increase.percent=0.75
alert.critical.error.rate.percent=0.10

# =============================================================================
# Hardware and Infrastructure Assumptions
# =============================================================================

# Expected hardware characteristics for baseline
hardware.cpu.cores=8
hardware.memory.gb=16
hardware.disk.type=SSD
hardware.network.bandwidth.mbps=1000

# Scaling factors for different hardware configurations
scaling.cpu.factor=1.0
scaling.memory.factor=1.0
scaling.disk.factor=1.0
scaling.network.factor=1.0